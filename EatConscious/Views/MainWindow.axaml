<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:EatConscious.ViewModels"
        xmlns:model="using:EatConscious.Models"
        xmlns:view="using:EatConscious.Views"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:EatConscious.Controls"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="EatConscious.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        x:CompileBindings="True"
        Icon="/Assets/avalonia-logo.ico"
        Title="EatConscious">
    
    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>
    
    <Window.DataTemplates>
        <DataTemplate DataType="model:Ingredient">
            <DockPanel>
                <view:IngredientView DockPanel.Dock="Left"/>
                <!-- we need to find the view model from control and pass itself as parameter -->
                <!-- in the below binding we fairly assume there is ListBox parent which has DataContext MainWindowViewModel -->
                <Button DockPanel.Dock="Right" HorizontalAlignment="Right"
                        Command="{Binding $parent[ListBox].((vm:MainWindowViewModel)DataContext).DeleteIngredientCommand}"
                        CommandParameter="{Binding .}">
                    <Button.Content>
                        <Image Source="/Assets/trash-can-outline.png" Width="24" Height="24"/>
                    </Button.Content>
                </Button>
            </DockPanel>
        </DataTemplate>
        <DataTemplate DataType="model:Recipe">
            <DockPanel>
                <view:RecipeView DockPanel.Dock="Left"/>
                <Button DockPanel.Dock="Right" HorizontalAlignment="Right"
                        Command="{Binding $parent[ListBox].((vm:MainWindowViewModel)DataContext).DeleteRecipeCommand}"
                        CommandParameter="{Binding .}">
                    <Button.Content>
                        <Image Source="/Assets/trash-can-outline.png" Width="24" Height="24"/>
                    </Button.Content>
                </Button>
            </DockPanel>
        </DataTemplate>
    </Window.DataTemplates>
    
    <TabControl>
        <TabItem Header="Ingredients">
            <Grid ColumnDefinitions="Auto Auto *" RowDefinitions="Auto *">
                <Button Command="{Binding AddIngredientClick}">Add Ingredient</Button>
                
                <controls:PopupSelector Grid.Row="0" Grid.Column="1"
                                        Content="Filter"
                                        ItemsSource="{Binding IngredientTags}"
                                        SelectedItems="{Binding IngredientFilters}"/>
                <controls:PopupSelector Grid.Row="0" Grid.Column="2"
                                        Content="Sort"
                                        ItemsSource="{Binding SortOptions}"
                                        SelectedItems="{Binding IngredientSorting}"
                                        SingleSelect="True"/>
                
                <ScrollViewer Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3">
                    <ListBox ItemsSource="{Binding Ingredients}" SelectionMode="Multiple,Toggle">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <!--      -->
                        <!-- <ListBox.ItemTemplate> -->
                        <!--     <DataTemplate DataType="model:Ingredient"> -->
                        <!--         <DockPanel> -->
                        <!--             <view:IngredientView DockPanel.Dock="Left"/> -->
                        <!--             ~1~ we need to find the view model from control and pass itself as parameter @1@ -->
                        <!--             <Button DockPanel.Dock="Right" HorizontalAlignment="Right"  -->
                        <!--                     Command="{Binding $parent[ListBox], Path=DataContext.DeleteCommand}" -->
                        <!--                     CommandParameter="{Binding .}"> -->
                        <!--                 <Button.Content> -->
                        <!--                     <Image Source="/Assets/trash-can-outline.png" Width="24" Height="24"/> -->
                        <!--                 </Button.Content> -->
                        <!--             </Button> -->
                        <!--         </DockPanel> -->
                        <!--     </DataTemplate> -->
                        <!-- </ListBox.ItemTemplate> -->
                    </ListBox>
                </ScrollViewer>
            </Grid>
        </TabItem>
        <TabItem Header="Recipes">
            <Grid ColumnDefinitions="Auto Auto *" RowDefinitions="Auto *">
                <Button Command="{Binding AddRecipeClick}">Add recipe</Button>
                
                <controls:PopupSelector Grid.Row="0" Grid.Column="1"
                                        Content="Filter"
                                        ItemsSource="{Binding RecipeTags}"
                                        SelectedItems="{Binding RecipeFilters}"/>
                <controls:PopupSelector Grid.Row="0" Grid.Column="2"
                                        Content="Sort"
                                        ItemsSource="{Binding SortOptions}"
                                        SelectedItems="{Binding RecipeSorting}"
                                        SingleSelect="True"/>
                <ScrollViewer Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3">
                    <ListBox ItemsSource="{Binding Recipes}" SelectionMode="Multiple,Toggle">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                </ScrollViewer>
            </Grid>
            
        </TabItem>
    </TabControl>

</Window>
